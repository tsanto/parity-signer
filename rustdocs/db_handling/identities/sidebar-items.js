window.SIDEBAR_ITEMS = {"enum":[["DerivationCheck","Proposed derivation status."],["ExportAddrs",""],["SignaturesBulk",""],["TransactionBulk",""]],"fn":[["check_derivation_set","Check derivations before offering user to import them."],["create_increment_set","Add a set of new derived addresses: N+1, N+2, etc into Vault database."],["cut_path","Separate derivation path with password into non-secret part and password."],["derivation_check","Preliminary checks if the user-proposed derivation could be used to create the address."],["export_all_addrs","Export all info about keys and their addresses known to Vault"],["export_secret_key","Prepare secret key export screen struct [`MKeyDetails`]."],["generate_random_phrase","Generate random phrase with given number of words."],["generate_test_identities","Generate test Alice addresses in test cold database."],["get_addresses_by_seed_name","Get all existing addresses for a given seed name from the database."],["get_all_addresses","Get all existing addresses from the database."],["get_multisigner_by_address",""],["import_all_addrs",""],["inject_derivations_has_pwd",""],["is_passworded","Check derivation format and determine if it has a password."],["remove_key","Remove address from the Vault database."],["remove_keys_set","Remove a set of addresses within a single network from the Vault database."],["remove_seed","Remove all addresses associated with given seed name from the Vault database."],["try_create_address","Create a new address in the Vault database."],["try_create_seed","Accept seed into Vault: add default addresses for a seed in the Vault database."]],"struct":[["AddrInfo",""],["ExportAddrsV1",""],["SeedInfo",""],["SignaturesBulkV1",""],["TransactionBulkV1",""]]};